name: CI/CD

on:
  push:
    tags: ["v*"]
    branches: ["master"]
  pull_request:
    branches: ["master"]
  workflow_dispatch:

# Cancel testing of a previous commit for the same branch.
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: write

jobs:
  test:
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
      - uses: actions/checkout@v4

      - uses: jdx/mise-action@v2
      - run: mise ls

      - uses: actions/cache@v4
        id: cache-go-with-tools
        with:
          path: |
            ~/go/pkg/mod
            ~/.cache/go-build
            ~/.cache/golangci-lint
          key: v1-go-${{ runner.os }}-${{ hashFiles('go.sum') }}
          restore-keys: |
            v1-go-${{ runner.os }}-

      - run: mise run test

      - name: Generate JSON coverage summary for badges
        run: |
          total="$(mise run -q cover:go:total | tail -n 1 | sed -e 's/.*\s\([0-9]\+\).*/\1/')"
          printf '{"total":{"lines":{"pct":0},"statements":{"pct":%s},"functions":{"pct":0},"branches":{"pct":0},"branchesTrue":{"pct":0}}}' \
            $total >.buildcache/coverage-summary.json

      - name: Create Coverage Badge
        uses: jaywcjlove/coverage-badges-cli@v2.1.0
        with:
          source: .buildcache/coverage-summary.json
          output: .buildcache/coverage.svg
          jsonPath: total.statements.pct

      - uses: fregante/setup-git-user@v2

      - name: Update Coverage Badge
        run: |
          if git fetch --depth=1 origin gh-badges; then
            git checkout gh-badges
          else
            git switch --orphan gh-badges || { git status; git diff; exit 1; }
            echo '/.buildcache/' > .gitignore && git add .gitignore
            git commit -a -m "Update for gh-badges" && git push -u origin gh-badges
          fi
          cp .buildcache/coverage.svg .
          git add . && git commit --amend --date=now --no-edit && git push -f

  build-and-release:
    needs: test
    if: github.ref_type == 'tag'

    runs-on: 'ubuntu-latest'
    timeout-minutes: 30

    steps:
      - uses: actions/checkout@v4

      - uses: jdx/mise-action@v2

      - name: Turnstyle
        uses: softprops/turnstyle@v2
        with:
          poll-interval-seconds: 3
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - uses: actions/cache@v4
        id: cache-go-with-tools
        with:
          path: |
            ~/go/pkg/mod
            ~/.cache/go-build
            ~/.cache/golangci-lint
          key: v1-go-${{ runner.os }}-${{ hashFiles('go.sum') }}
          restore-keys: |
            v1-go-${{ runner.os }}-

      - run: scripts/release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
