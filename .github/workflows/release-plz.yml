name: release-plz

permissions:
  contents: write # To create a release tag.
  id-token: write # To cosign released files.
  pull-requests: write # To create release-plz PR in case of race condition.

on:
  push:
    branches:
      - master
    paths:
      - 'CHANGELOG.md'

concurrency:
  group: release-plz

jobs:
  create-draft-release:
    # Do not run in repo forks and non-release-plz commits.
    if: >-
      ${{
        github.repository_owner == 'powerman' && (
          contains(github.event.head_commit.message, 'chore: release') ||
          (contains(github.event.head_commit.message, 'Merge pull request') &&
           contains(github.event.head_commit.message, 'from release-plz'))
        )
      }}
    timeout-minutes: 5
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.race_check.outputs.version }}
      changelog: ${{ steps.race_check.outputs.changelog }}
    steps:
      - uses: actions/checkout@v4
        with:
          # Need full git history for git-cliff to determine next version and build changelog.
          fetch-depth: 0

      - name: Enable `git push` when `act` is run without `--no-skip-checkout`
        if: ${{ env.ACT }}
        run: git remote set-url origin "https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${GITHUB_REPOSITORY}.git"

      - uses: jdx/mise-action@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # Increase GitHub API rate limits.

      - uses: fregante/setup-git-user@v2

      # Race condition handling:
      # 1. Extract version from PR title (merge commit) or current commit (squash merge).
      # 2. Regenerate CHANGELOG.md with this version.
      # 3. If CHANGELOG.md changed, it means one of these race conditions occurred:
      #    - A user changed version in release-PR title and merged release-PR before
      #      release-plz-pr-update workflow updated release-plz branch.
      #    - A significant commit was pushed to master branch but user merged release-PR before
      #      release-plz-pr workflow updated release-plz branch.
      # 4. In case of race condition, create new release-plz PR instead of proceeding with release.
      - name: Check for race condition and determine version
        id: race_check
        env:
          GITHUB_REPO: ${{ github.repository }} # Used by git-cliff.
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # Used by gh.
        run: |
          # Extract version from PR title for merge commits, otherwise from current commit.
          release_msg=$(git log -1 --pretty=format:"%s")
          if echo "$release_msg" | grep -q '^Merge pull request #[0-9]\+'; then
            pr_number=$(echo "$release_msg" | grep -oP '^Merge pull request #\K[0-9]+')
            release_msg=$(gh pr view "$pr_number" --json title --jq '.title')
          fi
          VERSION=$(echo "$release_msg" | grep -oP '^chore:\s+release\s+\Kv?[0-9]+\.[0-9]+\.[0-9]+(?:-[0-9A-Za-z-]+(?:\.[0-9A-Za-z-]+)*)?(?:\+[0-9A-Za-z-]+(?:\.[0-9A-Za-z-]+)*)?(?=\s*$)')
          test -n "$VERSION" || { echo "Failed to extract version from release message: '$release_msg'"; exit 1; }

          VERSION="v${VERSION#v}"
          echo "VERSION=$VERSION" >> $GITHUB_ENV
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          COMMIT_MSG="chore: release $VERSION"
          CHANGELOG=$(git-cliff --tag "$VERSION" --unreleased --strip all | tail -n +3)
          echo -e "changelog<<EOF\n$CHANGELOG\nEOF" >> $GITHUB_OUTPUT

          # If CHANGELOG.md for the extracted version differs then race condition happened.
          git-cliff --tag "$VERSION" -o CHANGELOG.md
          if git diff --quiet -- CHANGELOG.md; then
            exit 0
          fi
          echo "Race condition detected - CHANGELOG.md differs from expected state"
          git diff -- CHANGELOG.md

          # Create release-plz branch and PR
          pr_number=$(gh pr list --state open --head release-plz --json number --jq '.[0].number')
          if [ -z "$pr_number" ]; then
            git checkout -B release-plz
            git add CHANGELOG.md
            git commit --allow-empty -m "$COMMIT_MSG"
            git push origin release-plz --force

            gh pr create --head release-plz --base master --title "$COMMIT_MSG" --body "$CHANGELOG"
            echo "Created new release-plz PR"
          else
            echo "Found existing release-plz PR #$pr_number"
          fi

          exit 1

      - name: Create and push release tag
        run: |
          git tag "$VERSION" -m "$CHANGELOG"
          git push origin "$VERSION"

      - name: Create draft release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.race_check.outputs.version }}
          body: ${{ steps.race_check.outputs.changelog }}
          draft: true

  build-and-upload:
    needs: create-draft-release
    timeout-minutes: 20
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - goos: linux
            goarch: amd64
          - goos: linux
            goarch: 386
          - goos: linux
            goarch: arm
            goarm: 6
          - goos: linux
            goarch: arm
            goarm: 7
          - goos: linux
            goarch: arm64
          - goos: linux
            goarch: ppc64le
          - goos: darwin
            goarch: amd64
          - goos: darwin
            goarch: arm64
          - goos: windows
            goarch: amd64
    steps:
      - uses: actions/checkout@v4

      - name: Build binary
        id: build
        uses: wangyoucao577/go-release-action@v1.53
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          goos: ${{ matrix.goos }}
          goarch: ${{ matrix.goarch }}
          goarm: ${{ matrix.goarm }}
          project_path: "."
          binary_name: ${{ github.event.repository.name }}
          executable_compression: upx
          md5sum: false
          compress_assets: 'OFF'
          release_tag: ${{ needs.create-draft-release.outputs.version }}
          overwrite: true
          upload: false

      - name: Install cosign
        uses: sigstore/cosign-installer@v3

      - name: Sign binary with cosign
        run: |
          # Fix after go-release-action: asset dir is owned by root and has extra binary.
          sudo chown -R $(id -u) ${{ steps.build.outputs.release_asset_dir }}
          rm -f ${{ steps.build.outputs.release_asset_dir }}/$(basename $PWD){,.exe}

          cd ${{ steps.build.outputs.release_asset_dir }}
          for file in *; do
            if [[ ! "$file" =~ \.(sha256|md5)$ ]]; then
              echo "Signing $file..."
              cosign sign-blob --yes "$file" --output-signature "${file}.sig"
            fi
          done

      - name: Upload files to release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ needs.create-draft-release.outputs.version }}
          body: ${{ needs.create-draft-release.outputs.changelog }}
          draft: true
          files: ${{ steps.build.outputs.release_asset_dir }}/*

  finalize-release:
    needs: [create-draft-release, build-and-upload]
    timeout-minutes: 5
    runs-on: ubuntu-latest
    steps:
      - name: Publish release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ needs.create-draft-release.outputs.version }}
          body: ${{ needs.create-draft-release.outputs.changelog }}
          draft: false
          make_latest: true
