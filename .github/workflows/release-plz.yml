name: release-plz

permissions:
  contents: write # To create a release tag.
  id-token: write # To cosign released files.
  pull-requests: write # To create release-plz PR in case of race condition.

on:
  push:
    branches:
      - 'master' # Must be the same as ${{ vars.RELEASE_PLZ_TARGET_BRANCH || 'master' }.
    paths:
      - 'CHANGELOG.md'

concurrency:
  group: release-plz

jobs:
  release:
    # Do not run in repo forks and non-release-plz commits.
    if: >-
      ${{
        github.repository_owner == 'powerman' && (
          contains(github.event.head_commit.message, (vars.RELEASE_PLZ_COMMIT_PREFIX || 'chore: release')) ||
          (contains(github.event.head_commit.message, 'Merge pull request') &&
           contains(github.event.head_commit.message, format('from {0}', (vars.RELEASE_PLZ_PR_BRANCH || 'release-plz'))))
        )
      }}
    timeout-minutes: 30
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.prepare.outputs.version }}
      changelog: ${{ steps.prepare.outputs.changelog }}
    steps:
      - uses: actions/checkout@v4

      - name: Enable `git push` when `act` is run without `--no-skip-checkout`
        if: ${{ env.ACT }}
        run: git remote set-url origin "https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${GITHUB_REPOSITORY}.git"

      - uses: ./.github/actions/release-plz-prepare
        with:
          target_branch: ${{ vars.RELEASE_PLZ_TARGET_BRANCH }}
          pr_branch: ${{ vars.RELEASE_PLZ_PR_BRANCH }}
          commit_prefix: ${{ vars.RELEASE_PLZ_COMMIT_PREFIX }}
        id: prepare

  build-and-upload:
    needs: release
    timeout-minutes: 20
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - goos: linux
            goarch: amd64
          - goos: linux
            goarch: 386
          - goos: linux
            goarch: arm
            goarm: 6
          - goos: linux
            goarch: arm
            goarm: 7
          - goos: linux
            goarch: arm64
          - goos: linux
            goarch: ppc64le
          - goos: darwin
            goarch: amd64
          - goos: darwin
            goarch: arm64
          - goos: windows
            goarch: amd64
    steps:
      - uses: actions/checkout@v4

      - name: Build binary
        id: build
        uses: wangyoucao577/go-release-action@v1.53
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          goos: ${{ matrix.goos }}
          goarch: ${{ matrix.goarch }}
          goarm: ${{ matrix.goarm }}
          project_path: '.'
          binary_name: ${{ github.event.repository.name }}
          executable_compression: upx
          md5sum: false
          compress_assets: 'OFF'
          release_tag: ${{ needs.release.outputs.version }}
          overwrite: true
          upload: false

      - name: 'Fix after go-release-action: asset dir is owned by root and has no-arch binary'
        run: |
          sudo chown -R $(id -u) ${{ steps.build.outputs.release_asset_dir }}
          rm -f ${{ steps.build.outputs.release_asset_dir }}/$(basename $PWD){,.exe}

  finalize:
    needs: [release, build-and-upload]
    timeout-minutes: 5
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: ./.github/actions/release-plz-finalize
        with:
          version: ${{ needs.release.outputs.version }}
          changelog: ${{ needs.release.outputs.changelog }}
