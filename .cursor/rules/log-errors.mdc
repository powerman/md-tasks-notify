---
description: 
globs: *.go
alwaysApply: false
---
To make log messages looks consistent:

- When constructing an error message text try to avoid beginning it with phrases like "failed to". This helps avoid issues when wrapping errors, so we won't get error message like "failed to A: failed to B: failed to C".

- When logging errors prepend relevant "failed to" (or similar) prefix to error when appropriate.

- Try to avoid both logging and returning same error. In most cases errors should be returned (possibly wrapped when needs to add more context to error) and then logged only once at top-most level (like `main()` or API handler function where current request was started or even API middleware before that handler).

Good example (code irrelevant to errors and log is omitted):
```go
func main() {
    _, err := readConfig()
    if err != nil {
        log.Fatalln("failed to", err)
    }
}
func readConfig() ([]byte, error) {
    _, err := os.Open("config")
    if err != nil {
        return nil, fmt.Errorf("open config file: %w", err)
    }
    return nil, nil
}
```